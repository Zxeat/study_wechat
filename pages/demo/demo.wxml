<!-- 
  运算 => 表达式
    1.可以在花括号中加入表达式 -- ‘语句’
    2.表达式
      指的是一些简单 运算 数字运算 字符串 拼接 逻辑运算
      如 数字的加减
         字符串拼接
         三元表达式
    3.语句
      1.复杂的代码片段
      如 if else
         switch
         do while ...
         for...
-->
 <view>{{1+1}}</view>
 <view>{{'1'+'1'}}</view>
 <view>{{10%2==0?'偶数':'奇数'}}</view>

<!-- 
  列表循环：
    1.wx:for="{{数组或对象}}"  wx:for-item="循环项的名称" wx:for-index="循环项的索引"
    2.wx:key="唯一的值" 用来提高列表渲染的性能
      2.1 wx:key 绑定一个普通的字符串的时候 那么这个字符串名称肯定是要循环的数组中的对象的唯一属性
         （如list数组中的每个对象的id属性）
      2.2 wx:key="*this" 就是表示你的数组是一个普通的数组 *this表示的是循环项（即要循环的数组中的每一项）
          如 [1,2,3,4,5]或者['11','hello','你好'] （*this代表数组中的每一项）
    3.当出现数组嵌套的时候 尤其要注意 wx:for-item 和 wx:for-index 的值不能重复
    4.默认情况下我们不写 wx:for-item="item" 和 wx:for-index="index" , 
      小程序也会把 循环项的名称 和 索引的名称 定义为 item 和 index
      只有一层循环的时候可以不写wx:for-item="item" 和 wx:for-index="index"
  对象循环：
    1.wx:for="{{对象}}"  wx:for-item="对象的值" wx:for-index="对象的属性"
    2.循环对象的时候最好把 item和index的名称都修改一下 
      wx:for-index="key" wx:for-item="value"
-->
<view>
  <view wx:for="{{list}}" wx:key="id" wx:for-item="item" wx:for-index="index">
    {{index}} => {{item.id}}:{{item.name}}
  </view>
</view>

<view>
  <view>对象循环</view>
  <view wx:for="{{person}}" wx:key="*this" wx:for-item="value" wx:for-index="key">
    属性：{{key}} --- 值：{{value}}
  </view>
</view>

<!-- 
  block标签
    1.占位符的标签
    2.写代码的时候 可以看到这个标签的存在
    3.页面渲染的时候 小程序会把它移除掉
-->
<block>
  <view wx:for="{{list}}" wx:key="id" wx:for-item="item" wx:for-index="index">
    <view>索引：{{index}} ---</view>
    <view>值：{{item.name}}</view>
  </view>
</block>

<!-- 
  条件渲染：
    1.wx:if="{{true/false}}"
      1.1 -> if, else, if else 相当于 wx:if, wx:else, wx:elif
    2.在标签上直接加入属性hidden（内容隐藏）
      hidden="{{true}}" (内容隐藏)
      hidden="{{false}}" (内容显示)
    3.什么场景下用哪一个？
      3.1 -> 当标签不是频繁的切换显示 优先使用 wx:if
             切换显示的方式：直接把标签从页面结构移除掉
      3.2 -> 当标签频繁的切换显示的时候 优先使用hidden
             通过添加样式的方式来切换显示
             hidden属性不要和样式display一起使用

-->
<view>
  <view>条件渲染</view>
  <view wx:if="{{true}}">显示</view>
  <view wx:if="{{false}}">隐藏</view>

  <view wx:if="{{false}}">1</view>
  <view wx:elif="{{false}}">2</view>
  <view wx:else>3</view>

  <view>----------------</view>
  <view hidden>hidden1</view>
  <view hidden="{{true}}">hidden2</view>
  <view hidden="{{false}}">hidden3</view>

  <view>-------000--------</view>
  <view wx:if="{{false}}">wx:if</view>
  <view hidden>hidden</view>
</view>

<!-- 
  需求：😀在文本框中输入的内容同步显示到view中 😀点击加减按钮实现view中的数字 加1 或者 减1
  1.需要给input标签绑定input事件
    绑定事件的关键字 bindinput
  2.如何获取输入框的值
    通过事件源对象来获取 -> e.detail.value
  3.把输入框的值赋值到data中
    不能直接写：
      this.data.num = e.detail.value
      this.num = e.detail.value
    正确的写法：
      this.setData({
        num:e.detail.value
      })
  4.给按钮加入一个点击事件
    关键字：bindtap
    无法在小程序当中的事件中直接传递参数 
    需要通过自定义属性的方式来传递参数 微信小程序中以 data- 开头的就i是自定义属性
    通过事件源来获取自定义属性
-->
<input type="text" class="insert_value" placeholder="请输入内容" bindinput="handleInput"></input>
<view>{{num}}</view>
<view class="button_style">
  <button bindtap="handleTap" data-operation="{{1}}">+</button>
  <button bindtap="handleTap" data-operation="{{-1}}">-</button>
</view>